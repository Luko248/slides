---
import Footer from "../components/footer/Footer.astro";
import Lava from "../components/lava/Lava.astro";
import Progress from "../components/progress/Progress.astro";
import Slide from "../components/slide/Slide.astro";
import "../styles/global.css";
import { codeToHtml } from "shiki";

// CSS code examples for syntax highlighting
const scrollStateBasicSyntax = `/* Z√°kladn√° syntax */
.container {
  container-type: scroll-state;
  container-name: my-container;
}

@container my-container scroll-state(scrollable: top) {
  .scroll-indicator {
    opacity: 1;
  }
}`;

const scrollStateTypes = `/* Typy scroll-state queries */

/* scrollable - detekuje mo≈ænos≈• scrollovania */
@container scroll-state(scrollable: top) { /* ... */ }
@container scroll-state(scrollable: bottom) { /* ... */ }

/* snapped - identifikuje snap poz√≠cie */
@container scroll-state(snapped: block) { /* ... */ }
@container scroll-state(snapped: inline) { /* ... */ }

/* stuck - sleduje sticky elementy */
@container scroll-state(stuck: top) { /* ... */ }
@container scroll-state(stuck: left) { /* ... */ }`;

const scrollToTopExample = `/* Scroll-to-top tlaƒçidlo */
.scroll-container {
  container-type: scroll-state;
  container-name: main-scroll;
}

.scroll-to-top {
  opacity: 0;
  transition: opacity 0.3s ease;
}

@container main-scroll scroll-state(scrollable: top) {
  .scroll-to-top {
    opacity: 1;
  }
}`;

const fallbackExample = `/* Fallback strat√©gia */
@supports (container-type: scroll-state) {
  /* Modern browsers */
  .container {
    container-type: scroll-state;
  }
  
  @container scroll-state(scrollable: top) {
    .indicator { opacity: 1; }
  }
}

@supports not (container-type: scroll-state) {
  /* Fallback pre star≈°ie prehliadaƒçe */
  .indicator {
    opacity: 1; /* V≈ædy zobrazen√© */
  }
}`;

// Generate highlighted HTML using Shiki
const highlightedBasicSyntax = await codeToHtml(scrollStateBasicSyntax, {
  lang: "css",
  theme: "github-light",
});

const highlightedTypes = await codeToHtml(scrollStateTypes, {
  lang: "css",
  theme: "github-light",
});

const highlightedScrollToTop = await codeToHtml(scrollToTopExample, {
  lang: "css",
  theme: "github-light",
});

const highlightedFallback = await codeToHtml(fallbackExample, {
  lang: "css",
  theme: "github-light",
});
---

<html lang="sk">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content="Astro" />
    <title>CSS Container Scroll-State Queries</title>
    <meta
      name="description"
      content="CSS Container Scroll-State Queries Presentation"
    />
    <meta name="author" content="Lukas Chylik" />
    <meta
      name="keywords"
      content="CSS Container Scroll-State Queries, CSS, Web Development, Presentation"
    />
    <!-- Shiki syntax highlighting (server-side generated) -->
  </head>
  <body class="m-0 bg-white max-h-svh overflow-hidden">
    <div class="presentation max-h-svh relative">
      <Lava />
      <Progress />
      <Slide title="CSS Container Scroll-State Queries" speaker>
        <p>
          Nov√Ω sp√¥sob reagovania na stavy scrollovania v CSS<br />
          Bez potreby JavaScriptu<br />
          Interakt√≠vne rozhrania na √∫rovni CSS<br />
          üéØ Cielen√© ≈°t√Ωlovanie na z√°klade scroll stavu
        </p>
      </Slide>

      <Slide title="ƒåo s√∫ Scroll-State Queries?" desc="Z√°kladn√© inform√°cie">
        <ul>
          <li>S√∫ƒças≈• rodiny container queries</li>
          <li>Umo≈æ≈àuj√∫ selekt√≠vne ≈°t√Ωlovanie na z√°klade scroll stavu</li>
          <li>
            Tri hlavn√© typy:
            <ul>
              <li><code>scrollable</code> - detekuje mo≈ænos≈• scrollovania</li>
              <li><code>snapped</code> - identifikuje snap poz√≠cie</li>
              <li><code>stuck</code> - sleduje sticky elementy</li>
            </ul>
          </li>
        </ul>
      </Slide>

      <Slide title="Z√°kladn√° syntax" desc="Ako to funguje">
        <Fragment set:html={highlightedBasicSyntax} />
      </Slide>

      <Slide title="Typy Scroll-State Queries" desc="Kompletn√Ω prehƒæad">
        <Fragment set:html={highlightedTypes} />
      </Slide>

      <Slide title="Praktick√Ω pr√≠klad" desc="Scroll-to-top tlaƒçidlo">
        <Fragment set:html={highlightedScrollToTop} />
      </Slide>

      <Slide title="Pr√≠klady pou≈æitia" desc="Re√°lne scen√°re">
        <ul>
          <li>
            <strong>Scroll-to-top tlaƒçidlo</strong>
            <ul><li>Zobrazenie len keƒè je mo≈æn√© scrollova≈• nahor</li></ul>
          </li>
          <li>
            <strong>Carousel indik√°tory</strong>
            <ul><li>Zv√Ωraznenie aktu√°lnej polo≈æky</li></ul>
          </li>
          <li>
            <strong>Navigaƒçn√° li≈°ta</strong>
            <ul><li>Transform√°cia pri scrollovan√≠</li></ul>
          </li>
          <li>
            <strong>Sticky elementy</strong>
            <ul><li>Vizu√°lne rozdiely keƒè s√∫ "prilepen√©"</li></ul>
          </li>
        </ul>
      </Slide>

      <Slide title="Podpora prehliadaƒçov" desc="Aktu√°lny stav">
        <ul>
          <li>
            <strong style="color: #28a745;">Chrome:</strong> Podporovan√© od verzie
            127
          </li>
          <li>
            <strong style="color: #dc3545;">Firefox:</strong> Zatiaƒæ nepodporovan√©
          </li>
          <li>
            <strong style="color: #dc3545;">Safari:</strong> Zatiaƒæ nepodporovan√©
          </li>
          <li style="margin-top: 1rem;">
            <em
              >üí° Tip: Pou≈æ√≠vajte progressive enhancement s fallback rie≈°eniami</em
            >
          </li>
        </ul>
      </Slide>

      <Slide title="Fallback strat√©gia" desc="Podpora star≈°√≠ch prehliadaƒçov">
        <Fragment set:html={highlightedFallback} />
      </Slide>

      <Slide title="Kƒæ√∫ƒçov√© v√Ωhody" desc="Preƒço pou≈æi≈• scroll-state queries?">
        <ul>
          <li>
            <strong>Bez JavaScriptu</strong>
            <ul><li>Interakt√≠vne rozhrania priamo v CSS</li></ul>
          </li>
          <li>
            <strong>Responz√≠vny design</strong>
            <ul><li>Reaguje na scroll na √∫rovni CSS</li></ul>
          </li>
          <li>
            <strong>Lep≈°ie UX</strong>
            <ul><li>Plynulej≈°ie anim√°cie a prechody</li></ul>
          </li>
          <li>
            <strong>Minim√°lny k√≥d</strong>
            <ul><li>Menej k√≥du na dosiahnutie rovnak√©ho v√Ωsledku</li></ul>
          </li>
        </ul>
      </Slide>

      <Slide title="Odpor√∫ƒçan√© ƒèal≈°ie kroky" desc="Ako zaƒça≈•">
        <ul>
          <li>Experimentujte v modern√Ωch projektoch</li>
          <li>Implementujte s fallback rie≈°eniami</li>
          <li>Sledujte kompatibilitu prehliadaƒçov</li>
          <li>Testujte v r√¥znych prostrediach</li>
          <li>Dokumentujte svoje implement√°cie</li>
        </ul>
        <p style="margin-top: 2rem; font-style: italic;">
          üöÄ Bud√∫cnos≈• CSS je tu - vyu≈æite ju u≈æ dnes!
        </p>
      </Slide>
    </div>
    <Footer />
  </body>
</html>
